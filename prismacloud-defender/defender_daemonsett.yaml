
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock-prisma
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock-prisma
type: Opaque
data:
  service-parameter: UENWK3BCNnNBTWIxQWhQSzQxd0FTVkFpUys2R3lKSXQ1V0t5QS9obTRQcGRiT29PWENZcDJQY1ZVWWh0d3FCWHMrM3Bncm96WW1EdVZlWmR2TWFwTXc9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lSQUpVUjh1QUVJNjhjVnNTM3dDOU1DK0V3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpOREl5TURjd09EQXdXaGNOTWpjd05ESXlNRGN3T0RBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFMYzZqZk4wd3NybGthTVFpeSthUUpzK2xjZ2N1S05sVVNWOEUzbkZSNDNMeEwrNFVTcVhXamsrb3Q2Vwo4cThWVjZKekpxTEJIbG4zVHJWamdZYkg0OFVOUE9FdFh5TVZXaE56Ym9FT29uVjNORnNEWldpWVhGdm5TV1VuCk1peG9NaFdEMUo0TTcweU11Rk9Wa2dORDQ4ZWlteFVPSUdDRUhLOWNrZmwyVThDOUExYSthd2RPd0dZZGo3bTIKYXd1THE3UUpoS3ZOQmFWZ2pBaDhKbHBVUzB3SXdhWDdReGFXYmNrMkJ2ZDNKVzM1REFpYmNMTHR0YTFZTTlvQgptUlJvZmRKWFVUWEI1RjlNNWUwNUFoU3VFTDBhWmRUeDJvMkpjZmZ3c01mSS95aDhxTXVXZHltcHVxZGRZcHZOCkR4ZHdyamoyamNWT0wrcnhSNUpTcEdQcU9RVUNBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLc01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSWVNWTJsMTY3VGJaL0RveFhxM1d0TGxVUXMrTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBJME05Qzcyb09oQnFVUTJzVzcyelRwQUFnbVVjajQ5MFhXNEhZZzJ1CmZkZjFUSkNhbStkMnM0UjZLTGRnZ0g0aE9pSGtvcVhseXREaDNhNWt2cmw0cHhRaElwS3l0TFk4Qkx5QlFUSWYKaTIvaE9ES0ViQ0tOa0RQU095Yko5M2d1SjI0RnRheUtsTHU0b2lPKytWQzd5bjRTdEhvVEhISXVlUUx3VGI5LwpZUURuck1YMDNueTJEZWhUcTVseFpFbmhOLzlCRSttYVJScStNemxRdUJ1anRLZFlwSzFzRExkZHNLY2ZCWjh2CmFEYk5VN2tOZmpucWZnakVFRzMzUHljaHBZd2ErcGxBZ2pteTdST0FYVEtLL3VOTCt4MmRFY2Z4SnVHcUV5OGgKY1JrSi81MWVVa2FVSzV0RWROdXBVMkx1OWRaT05IZlZETmI2aWRadnM1TXMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRSDJhQTV6UmZWZG1aYmxFQnpMalFkVEFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TkRBMApNakl3TnpBNE1EQmFGdzB5TnpBME1qSXdOekE0TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXpTTTFsTE0vVUVVWHJaVTY5OTdNMDNFOFc3dW4wazBWeFdTYXBvZkI2dHIrSGhyWEVCbUxmSVdhMEpvTgptK01aQXlCMnl4dEI5VEhTaHdpWmVIcHJEa2tKcGJBeDgyZ0dHczNCa2lMbDYwaGR1SnduNWtSbFdXeXVBNUVMCkJ5RkRwZXA4dDUyNTV0dmRMQTdNeUFEdFNRN0svT0hDL0ZyeTdEQkNUYmY1aHlLQlFydk40alR4dXFmbngxYngKK3FSbjE4c0pwN0RsbDl0WDFDMFRZdkkzd1JWcm11MWdoelRENVFReTN2R1BmZTNnZmFuUlRERXcrUG1JTFBlNAoyVHhUMTJCNjlRQnhlNFducWllVjQycThBU1J6Tmg4UGlCVm5pMmJOOFk3eTQzQ0l0L0g3bS9lNkdsR0pUY0VmCkF3eXBiZU9MSnp1VWIwNWJMdWFzWXlQRnFRSURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNIakdOcApkZXUwMjJmdzZNVjZ0MXJTNVZFTFBqQUpCZ1VxQkFFQ0J3UUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzCnhqTVk5M3U4MVdSd2N4alF1SUJlWmhJTFdJQ3FnUUFWQ1VheVpXM3hTOG5XV1VDaFJjU3RLUlpMU3ZuUDU5bjcKRkVmMVVBUlAwQ2F4NUJ1cHE1MWR2azdBN0JFWThybmdERVNsd0dCYzRaZ3dTTE95dkJnR1Rib3NUMWJ6RXl1RwpnYWd3RVlmVVpQeHFJY1RIQ3IzVVpnTVpSbDdNM2RJSTRkMjJmeEJtMTViSVhGZTBXNDQ2bVhzSEVhVVVXTFRsCjN5R1FBbE5GRGdicFc5N3RuQnBocDhpa0NOa2U3RkNQN0hCRkNkQmJ0N1FaUklwWlpEVEU5dTNocGNEcVQyTWcKdDFXTW4rVlQyQmk3R2o1aVRuNkduZHhsOGcxb1dGelRaWW0rOTQvRUR6TUNWdmZScnNQZGY1VVl0ak5DL2dZeQpyNC8rUi9OMWRiV1NRNDVkVFZFawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw5OWUyNzMzYTJmZDU4NDI2NGQwNGViNTU4OGU0MDNmZQoKSE55QVZ1cXBITmVWQ1VmSE9VUzFjVVpNMEpVd0UzN2RDeXFJNVN4SVFBL3hFaHNmb1hsQ0xCVDNOMTAydjF5NwpjbklKaFFMNTRoNTdsalVCRWs3cTVMWCttOC9pYVg2ZmVMU2NOTmlnek5MUTR3aGJnNzNRaitub2lvR0hKSEVwCkVUcUQ5SHNZVFMyNk5uTXAyWmxwOENYdERsSzNMMnFGRGZvY24vYmhZNy8wdWNadXEvdGpTZVdXb0g1aXAxOVQKNG55YThoSjNNWG9WUDE3SDNsZVJQb3VKbWZsNUU3VG52bzZXOHhQVEpnL1NBekF0Sk42VzNuMDI2Z0JVVjRKMApvbGdsMU1GakN5NmwvY29NcDIxR3VVdEdIemJyOVdPNE52Y0dpZXZFZHY5a2VyMzdtdW16clhSUmZRMUNBcEcwCjQvR1ZwZHJHV3R4VmlpQTdLMWpGSnBwOFpMaWhBaS9FRnNVN2NGTFVTaEFLT0VEUVhZRUVVT2xzKzE4SjJTb2wKQ1d6aitNZVNZaGxnMlVsVXppT0dIb2M4eFpVdjJjSHIzVjNMUVNjK09WYjNMLzlTVVg1WVZyUlA3N0s5WnFoRApqMXQ0WG1HbXlXaFE2NVAxRDloVCtEbUJiZjJuT2c1VTkzb1h5K0dNS2QrdC9EaU1kN1JpVmxhb3pEdWE3Um5wCkdFQkRTN1VDVG94Vlltemp6VjJjcUZjV0wwa3J2U1RiVzVoR1Z4VUlQM2VraTgvbERjVCswajdJbTVUUHF1cjQKaFRsQXl3b2ZBa0Z1bHF0TEtSOW55YUhSN0hPSldEYS9tMnFPRkZhVEI4S1V4dVh1TlVOL3F5UDdQbFpTSnVheApiTzFHd3ZvM2JtYzlCTzczZUphWGdoQmpJOEVvYUVsT3MzWUZsd1VXcElLWUhWZmhqRDFmdTJaQzdnNExKOGMrCkMySW1RWDlZZitnRGdGcnZCNG4wWEl3VWYzR0tWK3dYMnpMNW55bHQyd2hmNGRWMWdSamk3KzRTNFdyRi9uWjEKeGVYR2xJQmZYWSs1b2lTd0toQkRvcUZEYWNsZUJkZFR5VnJsaVZJKzY5c29CM3AzRHZONFF4V2FYNVIwRzdEVgpvUGpYR05GdTRuOXI0ME1vVy9IcG5FVmIxcDdBOEhBNWV0V0FPSS9NNEpVS2pqRUpiYnpYcFE3bU5tOVZOTEZqCk5YNE9Jc29DVTdYa3djY1dpVEdnWCtzT1NVa0hqdFY2THh2N29DckN6N214RlR4UlpNZEhKZU41bG9iQjFoaFIKbWV4Yi85bnBxT2dicE44MDQ0WnJIODN0RlRYVi9Cd0tQNEd2d1JRRVVoQ05tYW5QeU1sU3gyWXRFL293YldSagp5VUdlWTVGWFcxS1o0blB0WnB5TkE2cDNyMUZiMjF0K0Z3R2xhSzNvSGJZb2lXZmFrenJ3RzJuSHdtN1FaQzg2CjFHMC9KQXkrdmU0RllseUJxZWxtV2pkLzhNa1E3WU1ocnJUWW1XNXFjL0xqdjEwQVhYVTNFK0k4ZHlJc2ZReDcKcnFjQklncmdRMEV2ZWNVMitGclhNK01BdWlFWlpJUjgxQjhjbzhYNTJHVG5KU0ZlMWJrMDZGQkRuSy9vaGFqOApiQ281Wk82b1ZnN3N4L3A4MDNFQnR0UGoyTlFuU3NkbFQ3SG53SjVDVUc5dGtmRlFVak5qMFlVR0RRazdLUHc3ClZsZUJtYjBQbVdWNkV3b3RLNDREMEJ1L3V0Z01FVTQyUExaWlBpRzNnT3JhSmdobGJzR05FUDd6TGtRVG4wSDkKY2xlUmxXaHo0ZlhFOGRYUlZqZlJPeEZDdmZ4ZmhnTjVJcGpwTzF0L29MdStiMERjUzg2U2dhcjdJenlibTdxVwo1Y2Q5bjZ4WVdiRldSVGE3SU5wSmxhQThxUVBkcEh0OW5UU2NaaEJscUtOV0RhUVI2dER3K2JYbWpueXhTSEtICjZhT0czR3JHY3NNWUFYWXlRcDdoR3JUM0dNWWtoalU1OVI3bmVFenlDUXkzeE1nODJta1dGYzJFOHgyUUdNNnEKWGZUUE9hU3R6dmhZRml4Q2hrOEM2dURLRGNlWWMwOFV0TmFkYjFXd0plM0J6dTArOHZtS3AvWnVVRitEaTJjYgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtlMWZuWVBDZ0lOU2JBb2NyZTU0dnd3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpOREl5TURjek1EQXdXaGNOTWpjd05ESXlNRGN6TURBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDZDVYbEw3dGNtdlp6UW5sS3JodWIKM3NNaitZYnlBVXpyL3Z3bnpzSE5EakNneC90UUIwa2lwWWtHeXZjVW1adlk0aVFWS2M0UnBqbkcwWFY4ZFdRNApsZ3l5SHcrRW9iODAxMTVuMkdrbXRSdkY3cU9US1ZGN2xUYS9Wc0JDREIrWnlZMlE4aVBvKzEzYTVPRWJyMk9hClNtVnc3MGVIVHEzcG0za1dPRkRXVGRNU3VsWlF3bHpQUndtaVB1aGpjSFNjQUpOc01nYkpoSEpLbXlycWJlR0MKK0JJWmYvR1IzN2RQNHRzTGtYTUt6L3RVYTh6SDFwUXg5UTdzN0lsY0U3cmE5cHQ2R0hlUENBRnZqWXdrZkNvLwpadTU0TkRPQkVzbDFDT3hMT0g5eHozL0dmL3FOOUJOZUFRK1cxRWNZVFNQdDB6MEpmVXp6ZVhmelRKYnI3eXVGCkFnTUJBQUdqZ1lzd2dZZ3dEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkllTVkybDE2N1RiWi9Ebwp4WHEzV3RMbFVRcytNQ2dHQTFVZEVRUWhNQitDSFdSbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXkxd2NtbHpiV0V1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMOTUzU3VQU2l3cVluS2JNZXVCc3E4dnJ1ZHlDalRrU20KTjVPekN3VVM1MUJVS29vZmxmVldxTFdkeU1rcDJvVDhzWjYxTENFT1VUMk91RExLOWhqZ3dQa3VBcVlnellrWgppSmNDVFpNVVFGSjRIVCtTZnVTRDVJMDk4eGRwTUVPVEVFcEZLejh2YlgvNDY3cjdTa05jdE8zemw1K2RzQnZMCkM5Z0owQzlYMHI5MHMveWNKazh2TFJVaXBvNTAyNkFUNUtlV2ZVZmx5WGpIcHVWWEtkNXpaL2ZvWFNDUklXNmUKZ1BQOW4vSTQvSTZsQXdwWHYzenBIcG8zdFRiUzRFdnduYmhJU2hzZ3FqTklYd3lPVFdaTVJTVXVLK0k4QVE1MQpHSW9HeEd2bGNzdUNOdllYK1FCVGVidGtQbEIvOW9PL2tTbFhWL21DUXY3TXpZR1FLVlcyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxlYzJlZjNlMzVlODNhMjM0ODYyMzBkZWExNWJmOTYzMwoKOVZNWURDN0k5LzNIaDJGSDRpbGpaTEtYRmtNWVl2cG8vUGU5ZTBBeUE1SHhqUGVyUG1ESWRzQndKRkRiVjBycApRbWVURE5UdXgvQWhVNWxYOThwZk0rZmI0TCt1K2N4OXhpMksvMGV5Z01wTXZwa05sakNNZ0J6bFFTblBCemFECmlZS3BIZFhtYmZPK2tiY0hmU3M4REIzUytMNzg2MVhxMXE3cXJhb2ZIMWtqNVMrNW8xZGVvM0VOU1YyQW5UaE4KREpkVGxWSTNoMXRSVVRwejZBRzFPcjA1bHdSMi9XZVFObGNMelNVUkVSY2t4V2g4R01veW4zYmdYa3dyaTdxNgpQS24yRVJvOG0ySjg2aXg3Z09xOHFsR2I2NDgxU054WWFydnZWUWRGZGR5UGs4L290RXdrWStoS0d3bnZuNzJ0Cnh1QVB2ZmtRYkJ6Ylc1NXRaSElaaTMwTjQ5K0t2LzBCSjRtOFRYaEtHVmU0WnBVRGtpNDRiQkJpNzFtTkVQKzMKdHQ2dFhicGFEVldqNXpaQjIvV2c3eFRtSnQxS2toeXByV1lzT1dmejV0R0lTSlhGSzhtOVpURTU5VDF4WnBqcworR09Yc1RhQnIxSG0vZCtxY3FQVE82Q3pkZHpxQit6Q3lzNjE4QlVHS0xhMkZ4MXlDT0c1VlNrVUJ2dkYwY3EwCmtPVjN0KzgrcS9rS3VpdU0yZXd5Qjk4YzFrdVJFT08vV0VoVWljM0F2STEybDFndGo0czErbHVkOC9WempjbFMKdkhqUnZvbjJMWW8vQVdKamE0b1RRSWd6VENscVBLc0NpS2svMVNiV2ZWNlplbm51L2djK2lvOWJNRDlscUh4ZAp1aVFxWnJreUFiUVJwSVFDbUI5VEtSS2cyendzOXlpejlaNit4cnpPMHVJTFVsS3pXUE55RFExdVphbFJNU0xvCkd1R1dabEdYTWMzZEJBekE1RnVmYWxPaW5qRnNBdVU5MW00aUZMUWQ4UDBvWFFsTVdYelBmZGpCRnd3bzhLck4KaHozazdyK1o3RGhHNmM1M01YWEpMcmRhRlA3dUFVRHFHaXlTa1hMYks1VUloaHNiajlSZjZuMDQrQklTSVZtNQpQcTBmczdmbXRoblBhS3cyYVcwL1hwUWtyM2srSEZaUHV3TkErTXVvc2FpeisxbkNEU2NzMFRmTEhKVTBjS1F1CnNJeG15T3lnQnQ1cllWVW1GaldPUlhRdndrblBWa214YTJqb0ZSMXEvcHFwbVpPRFE0TkRMYW5FYzFwUjhzc3gKdW9XOUVvdHlOQyt3Sm16QWFEVkZSQ25iamkxeWYwWDJQQ0d1MmJURzNLMTZPaWpkUnhBaFJ0R0taMzlnWTJaYgp1M2lIYlpNTG5ESXcxZElSTkM5cTNjRURVdCtLZjQxV2d6bkRaZUhFYmx2ek9VQlNqbk8zOUFCM3ZWRGtKZ3gwCjIwVS9nS1dSUWpqV3Z2OHpLRTR4WUdOMS9pdG1hYWVBK2FYbzhuc3AxRUx6MnM4NTBGSlNZaFoxc0x1SFBRVisKck5zdStSN0s1dlU1cG83Q01Bemw0bkdqazQreXdRWGhhWE8xRW9ub05CekhlMGJGcmh5WjVFejdMR1J3TmZ5cwp5dkJncXpndS9xSVZIMWFBYmpqSVA0WkJUb2V5cGJ1dWVOYVp0UjErT0dyaHhjaEpWRWowZjd3N095N1hVU3ltClZqLzI3ZTVHS2o5RThpd2Znc1l5a0MrbG9wYVBtWDBPL2MyZFlrNVNQVDVaWGFzOXBraWRibTZwVjY5aTQ1WEsKUXVReDhHaVJWQlZLQmZVUWpNQ2NWY2ZUWjZMOXU3VkpZYThYUkNyamdEZ2I5SGNBTm9FdEdZZStSaVBaSitONgptYTc2ODE5U1NFQ2oxcXd5aHZDVHdyODFmdWJoVDJvUWZhK0RJWUZPRDh4SDFYZ1NUQ1RTRmd1cWxmWmlZZlY4CmxrWkFYSXNkeWwxaGdKc0x2L1crbWpXNjIvOWdjcFpMdlQ5NWk0WDVkYUt2cUc5dzd3b0Q3ZzJ4U2lmYXBETi8KWEkyTnNhbmJqSUlzb014dENMUHRRVVhDTld3cGdldXFhVVZ3NWZHaGhFNEo0ZzBQTnp3QldZQS9DeGl5ZzhFNwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock-prisma
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock-prisma
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_bjclvgj4box9oxhmfkwh1tkbp27o0uur/twistlock/defender:defender_32_04_113
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/run"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://twistlock-console-cbc5f6484-crdcj:30084
        - name: DEFENDER_TYPE
          value: cri
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/run/docker.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "e2c7347d-1053-d673-49f9-42fd250dd6d0"
        - name: DEFENDER_CLUSTER
          value: ""
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/run"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock-prisma
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender
