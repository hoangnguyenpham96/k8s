
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: eWE1SjRXZnBuQklPaThNVFF5YWY0bWc3Mk04T21YSXJQUlA1REJyZThHd01nbGY4NGhESTFTZGh0OHFwTDc1VGNWNUhycU1pRE5KbkhZN1dYZnBIdnc9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lSQUlBOS81cjlTS1RVY0NtYW92WVk1SFl3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpOREU0TVRZeU1EQXdXaGNOTWpjd05ERTRNVFl5TURBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFMbnErZXptRGtRd091YWhydldkTjF4bDBwSEdEVXJlc1lTTzVDT1pwVWtYeFRPQW8rM1JZMVN5bkdUUQoweHZkZHB4WkZuRkQvbWlsTTNGcmpRWi9XS0UrZGxUUTVmdzdCTDJ4QUV0Wk9Lb0t3S2ZLWnlaZkF5L2c3UHBMCmRnTFVxaEk3VklpQkk3d1pSZVNUeWlUMWs3UVBiVW93c01ZenE2bUMzZU1SWnhiYUxwZTNZTGFNVGdxT05TVWQKQ1dTbHFuTndyS0VrcTZtZkNWQVhSWTRNckNOSGlTaEFMVlYvMFdaTWhQZ25Cajc0bU9VcllCVDVIQ3YvTUdDKwpodzhDZEo2WTI5STZ4Z2pTdFFCWmFSaFZjZit2clhCdUdaRVREd1pXM1hwektJTkxmMzduUVBpa3BlblpOdnNQCjdaNTFURHVkUzZrQ3FrSmJrSVpQa3RyVDdlY0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLc01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR2F6bnVjUkFRaU1IZ0t0Z1BTR3d6QVhPQUdCTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkd1VGhmMUpjT1JES1BXMCt2VXpRSTI5V3ZENW5Wc0tsV3MxS0hwMWI5CnhrN2NBUmkvZmNBVnRocnI2MEtEaHNOMkNzWUpQUkxHV3doUTgvWkZEd2NZTFdmSGlLU0l3UElsVkw3QVM1R2MKVU9OcStySWtUSkJMLzdTR3FHcTROOU1pTFl5bWZ0NE81MVhHOWdONWpkM0c1d0ZWYWhjTW1BZzJJdm5sQlNwZwpXaHZsZHo3ZE1NcEQ3cVNESWhWMWtUZFpLZkdkNUFHSXJmamZManlNYjN0dDg4MmN4Q1ZJUUJlQVJJUjNPVTdKCko0cDk1VVN4a2gxZDl4eFNRWWhEd1FCN1RJSjM4V1E4WWRCcU9pZHg3aU1RcmpyT2sybG9seEUrekZNaHhqclkKeEhMR1VRbVNKRk1BUHg0MnJMV2U0OEdRcjEyeHZHdGxXRnZuN1VkZmE2emkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQU03NzczWUtucVFFS0tsQlNTRnc2RkV3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpOREU0TVRZeU1EQXdXaGNOTWpjd05ERTRNVFl5TURBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFNQVgwaEZiQUZPd2tmWHdrY1RmcFF0cXlxeWdnL2ZIV2x4ZDlIUzh1QnAzeVdDaGgvUDJ0MUVTdDhqRgpHdkw4c0FHWUZJVVEyanpHV2lhSHVtcWFZY3lSaU5taEl4azE3K3F2dW03SHh6S3grTTRuQWJ3Z2dFWkxKZUVwCmdhcENleDdueGZJeExDN2RDWm10QzRwRVJvNDg0MTkvSmMzN080ODk0RWRxb05kV0wyVnErSWl6NlZKSmQ2bUkKTzlBdGV4Zkp1bFNIYjVJWWFYSHJWczljZEphVFZpN3ZYSXZudU55b2RaaXF5WHZhb2pOaWxsZlBMSFkrSlUwVQpoL21YQ082SFV1eVJlYnkxTDkyd3ZCYnQreHZCSnVKSmhzYXR0YnRUeFBDTlVlSS8yWHdscm03dSsxNitjb29QCkVuOXRZR2g3bmZKQ0c2MFUvUzZyQTFkaGpZVUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVWnJPZQo1eEVCQ0l3ZUFxMkE5SWJETUJjNEFZRXdDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClBQa29UYmVtVm95L0VsejlqZ0pob0JLdGZ6ZHhCT2FJT1lMU0VwS3FSalA1NUFsb1Z1K3VVdkEvMEpMaDE1TjUKYkE3MWRGTjRYL3ltNjhqZEVUUmJ6QnA3aUthS2ZnbW42cE1GZUphcWNuS251REZyVzJhMEpVekpRaHVhOHNnWgpma0xZVW5YV3RrVnN2U3dybjlQak5UZkN0SVlkbjhsOHk0V3JEditrQUQ1cHpOemlFK1hhQW5wcUVQQ3c0Q2k1CjFZTXZ4bHdoNGtsVFhCcjJhSm1Gc2FjUHZMdHhRTzBBTkV5RVdaU1FHbW9seHJNNjZVdHp6TDNrT3dBZWlSZXkKS25IR2wzYk9ScE1CcHh3U2RKcFhGWVVLaUt3cXhzUko4K0V4MUU2azZCZmhVRnN0YUdXck9HZmdITEpuQkRTUgpjUmtZOXRGNWFsdDFTak1maU11R0lnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywyNmEyNDI0MDQxYzgxOWJlZmRjNjc4MDExYzA5ZWJkMAoKaEh5Sk5zd3dHSEdaQndmM3pvbER6UXJSUFNIcndHMG56clI1MW1nZzExM1dUWldxTVl0RGpHVzUrWnJHeitQSwptcXlWU2xSc1RpMGtpbFI2NkpLOG5MeHkrUTF0bENQajZ1VGxZSEx1SlJ1K3AwcjRPTXFTMjRvdWlWdmFLZk9XCnZGYXUrV0JpZVppOHcxUnA5dFNHMGZIOGJxdmpJcHEzNEpCOEVmSFZoUkhrK0F5RUNYTmZ0TlhQUGRNbzJnYk4KVktGVktGWmorbXVwVTlpNDZyRXhqOEswZDNzeXRJQnpFYWFSQkJac1NHdzVKaFpSNFpvdXRVd0p0SnhCZTR5VgpsVlRQS3BqeDhkeGY0OUk2Uktpem9YY1Q4R2dqOGc3bStUVW1DVFp6ZWpoV1VwcFNXaHdRSy9lbWpwa014K1ZxCmxYd2pKbnAycDRUeTliaW5JcGFFWnBzRUFMVW93c3ZxQ243S0duT3pFUGw0ZC9USHY0L1FnNW5YeDZDdjRYSWEKRHNFR0FaTW9iYkRtQVVDVVV3eWdzZDMxZEN3bGxnQjdPY2ZXUHBzNXJnMEp5dE44WWhYaGg0NmJsT3Z4MFFmTwoyc05CZFlIaXJkM0xQbmlFWU1hNTZZSmwyN3U2TTFDczU3MHc3MTFZYlpEVXlGTXFhNmFxbkROcHhuZzlkYVRlCkFheVJyUmlCTjFSdWpLNVg1NjBHR1NCOUkxbEUzVW1aVFZWaE96dkNKQk8vQjJTclpxZnIydzZyelk2ZW1OZXYKZTZ5aDBhVE44RU11OEkrb25uOFk5S0h2Z2Y3emZwK0xVSGt2Z0NFdDlGcURmMHFEZWxQd3pHckZBS1k3cThYOQppVnlWTnQzYUh5WlZFd09ENG1BTnJnQmduVUVJMW5tL05BQVZIZHdOZjNOTGJlYUxES2RzcmpraTdqc25rZjUzCmJFQmRYL3JqS0JNcmJXeTVZNFowdlVYdWpWSkw1QldYalhQemw1WnIycEpycHlUY3ZXeFJKVmhQSFg0cmJMdlgKWVVrcHNwdU5SeXlLY0ExS1Y2NEQ5S2hGd2NtVmtpZkdBb0pLN2hnK2tadWcycXVENjYzeGdQQ0FBZVRIckVvNAppSXIzcnN6Um5wMzF2b1NJbDBPdXVzalFqcDZCNjlOa04rL0t4Vnk0d0cvM1Zvbnd5T1BBM25Tb3Y2MkhvSktmCm1oWlh6YzhTZUMzSTVtSU05MU5QWFE0U2dBZk9lTjlEaDZZQXRxWVQ1ZnVhTWxvT3czWUNMdW52Wjl6bFVMMzkKMnhFRVcwcW53OEFyWU9pWENtT1g4VHppZXo1ZWVkelAxdnArVS9wcHk3V0k4RjNUd3RZeklBS2pRRUM4MUU5NworbGdQYURPNWZmejZ3enZkbEo4ZG9vUWhveGdUY2JJcVhreVJ2bkQ3bmpsaFRWbTBhcUtwd1c5TXRkaldhc2pQCmgyUGQ1VlVEQ1F2TlNzWGFoK0Z4TWpISjl4eUhRdDI3ZXFJbWkyQW1HUzhrbERZeEJCUmtYL1NDTVZMU1lRUHIKSnBNK1ExdnBjS0wwY0ZZR3hOSkZKUW5uQ2JlYnRvM2crbStCL055RlNHRnVaN1A4enUzU24yM3oyVHZaMDFUVQp5a2NnaTdPK2RkRmhaRTRMdGVNQUMxZEFieGt3cjJWNHRxZGlLTmxWQ2c0YTdEanpTdWNYTlRzNUJKVjVsZmYwClY1MGRvalJwV3RKR05Ld05XQ04ydjUreVYwOUtGM3YrbEtXaFVGekRIOW9UUEZHVldxdEt3bzBYY2EzcUhFTjIKeWd6Y1Q2dXZLb3Y3MzhBL01IckxYRStJZ2tMQllQUld4eUNLWmFUcThPVkFRV1JKQkN2VmZ2ejNDZHk5RmZjdwp6ZW1vKytPRW41WEtHazh5bHFkcVgvMTllK1BWRHJhc1BFUjJxMVduVDJkSW5UQzVwaEt3eUhqblpYWkNhNWRvCkFOY1JZNHM4d0sxNUlOVDF3ZkZkdk1JM0tTbGkrL0lmQ0p2b2NnMzZiM1VpWVNUWi84UWpzK1F6VFIwbnpOT2sKd2pLc2RzN2RrL0lzN0V1STVHcTRlMUhtK3ZCK0hSZGxhRkNyNm1ybURKMTNxTTkremIvTVRkS1lNWUVKUElRVwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQU8rTzZaRXpGbnFHS0plSkVXdkd2dzh3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpOREU0TVRZeU9EQXdXaGNOTWpjd05ERTRNVFl5T0RBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNvNm9hU2JjRE1vY0piWjEzVG1mKzkKbVI0NktPQlZub1hIcXFkTzVWbkV2Snh0YnhmY1dJUzgxVFlLbllmM3YxaDdYUExZTTl2T0tQZTc4bThpQ3l2MApIS1NVQ3c5Z1lpQmh0aVV1UTlWVFRVdTZlODgvMXVQdGlGekZXRy9yQzY3U0FaVzFWYjQ2YzRyb1pOOVMrWEZ2Cm96NGVoR3B0b0FVdXN0ZWJKS1Yyb0swOEZMRi9uZlpEdjYwTkJKNDcxYTBtaWJ1c1huZXdTVDJ1T05FaDQ4c2gKUjdIaXZva1lrbWxURjloVFY2elc3NHkzSUFlTzg2UENUN2FubUV0cTV0aEdFTjFuQ0g5cjcyU2UzaVd5SUNyVApWdHRRVlN0Q1dKUzM3L1lLNGliMzgwZmhJSm9tNDFaOFkwaTFZc2RiNHJBQ2VkZU0rc3lHOXhFUStpMGRYeXNmCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkdhem51Y1JBUWlNSGdLdApnUFNHd3pBWE9BR0JNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUllK1VoZTM3TDJ4cEZudDlNcnl4UTVtam5rTTFFbzJtazBWbzl1RnNKYkEKZGpWYU42cVlHLzg0TlkyQTIwcmRXOWRtSC9zZDU4c0lwa1NiQkZydW4vdmpYTm1MOGRZb3JwSmVXc1lsamlKeAoybUEwcURQaTdmQ2lwaEZZdFVpQldvY3pwYkNuZTlyUE5FclZPMWhmYlZpeGZrS1F3bk14KzZkdFVSV1pOQXRlCkhrNC9VWWVjbUVzR1ZiTHZjcmRsUFFNMmtlSzhXMU1CQ2NscExidmlUYkJabGpEMjFiVUg1UTBTWkNwVFcyVXkKRzRnekIvRVB6RW05d3UzSFBmUkxMd1JoS0Z2Y09DOTRDd0NBUlhmM3paN0ozVitESTEzdlhRY1hBdW50LzFwbQo0Q0lWRUNQZDRyNisyU3gzSnlJdG9sMkVaRFBtekhBcVJnNTJVWDFIdVZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxmMTQxOGUxYzdhMjIwMmExMTAyYjg0NTRjYmZmYjViOAoKOWRhQzdLajFIL3pxVkwrZGNFdk5HSTFJeTlPY09wMzArU0UxL0k0aTUvQ0VVSlJIdTBxZnhjUlFqbGNZLzFzNwpKZnRWVHk2bnYzK3I0VXN0NHNVZncrSy9OR2drcDRZaXNjbTZ2T0tFdC9BUng5L3Z6OHVDY3pYQ3kvWXpXVTZHClM3cGU0WXdtNVN6SkZidUhzdzhPVjlybHYwTm1HemdQSVBQV2U0ZXhITFJ0K1oyeVFMTkJIL1BGWTVXeEV1SEUKSy9qeFR5UzhQY1NkRERRa01HREswT3lTS1ZhZkJ1TGNCbWNjRkY3Y21mWnFZbmsxN2VKZ3FyTlkwc1pab1JYawpyeEZzYXVJakx5QlAxMUVVaWtMN3B5eWZNV2VVLytpVHZTMjhha01yV0xHd2lSd0NtUjhteGhqZ0dJMG9MWXRXCjRvc3A5MU43czZuZ0JkcE9USThTVkZ2WWQvMWlvam9sUi9Hd2MvNzRtRm1Xd1d2L05weVA4emtualpTdEY4TVUKVFg1YkV6NGU2M09jajNSTjNKSDVzbUZJZ3owbFVzUDBQTFloTUgxVjhXK3MvK05WZE51Z24zQjdPcU5LRW5aKwppU21RMEFxczkrbWlYNVRpVjF6YTl4ckN5aml4a3Q5N0xOWThnREhjUjM3M20xamdUWE5sQ29TWGJWenc1M3FoCjB3d3FIWmFMMEZ0cXM1OGNOeGJlVDcyYTJiVS9SNVQwT1VqRFRYUklhamwvRHowcUVJS0c0QWxxOGxUTGdMR0gKaW1PcElXbXVVN0lOb0Z0K3lzVXEvblorQ0E1U1hmSFczbXQ1VFNISndTQU83S2s1MitCZmljWnRteUFmSlRoNQptWkI5UFhRZGVjTC8vK01RemM3Z25qV0RsRlpjTlZsZ2xkdUZkSzhlblNRTmZQclYrQXNCVVBQcGF5UnJXcmNlCnZqZlE1a3Q0ZHBHUDBySGppWU5DcTdzM1orS1JNVjlVUFdockVMWkwwd0pUYXREdTB3dFdIREpyeU5BUFZPY1oKcjFDdTFDTUl1TkRjMjFKVEFlbTRkRlY4Wkw4WUF6NUpzZkdmVlpsdzlJQ1czbnphTXcyYzlPbUtNNWd5Z05zawpyZlArS1ZQWlpON1h3S2pwakd5ZjBwSG5YTDg2SklaZVdNWXAzQ2FZNURVUXNDWjVJVTlaUVh2RzA0TFJ1a0NjClFLMU1OUkFoUW9UZHluWlM5dUN5dWpNV2hZczRONk5sUEVuZ1dRYjljS25aOHhJRlR4dDltY3VjOGV1M0tVZ2oKbE9CbHlPSWxOYlQrL1hDTGp4Y0RFb3pMWU14YWtsTWw0cXY0b3lVWkUzOEV5OW9NM1N4eCt2Mk93am10clUzMQpaVmVLQW9PSEZ3WFBMQTZpeU43UFI1V3Q5d2NkOW1BUmkzRTR1ODdNdUpSWTdvNThKRGEySE9aOHZlODg1NUhUCk1QZ0dxemYwcmpldFhuelJvUlpJa1VINW9BbE1yczRWSVpGZ0ZZYVlGQVA0OXNCUWdyL1dnR2FkbTlLZFBNRzMKVFdpY2dLNDdxSENJVWNoTzF5NURXaEtPVFJIQ3BtR2xONUdIUy9aTXVSS3E3azEzTW1DQkovc3JOWmIwM0tGcQpFeG8zUko0UXdRWkdXNzhTa2FVQ2hoNzBhREhKTkRhZDlLeElpUy9WOVo0MjZSZ0gvbThLTlU4a01FUmhNajZoCkFRVEFtbnZabGhSM21HS1dkWE01RWFWQjVDYUhTQzRDb0hlWkpyM29ZOHZOTnp3czNGQnluL0d0K0FUQ0hGWmEKN2RYZ2FadWkvUWFEbVlEUXd5SGtaK005eExzSGRuc09rT0g2Ull1R1ZHeGI4YktDU0VRd2FlL2dQWVozd3dMVwpFeXRpUVYvZmlvZ3NZV0ZKbUowdUp3RWs4TjBHNmFIQUtNVzh3aHl3ekMrSEFmOUJab3MrMXRmdUxVcitFTlZHCnhpVmV1UVJzMVMwblN5empNTzFEQXhDMTNLa3VkUU5qckZhNEM3WjV1UTNTOG1ENkEyRzBOT3UxMGpuQUVtYk0KWjBhYWpSZ2xnTnlYamdTRWhiaE5IWmxjT050cUlwR1JyeklROWpnSFIzK1k1L2VUOTlleWxGSTgxdGpxOGk1RwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_bjclvgj4box9oxhmfkwh1tkbp27o0uur/twistlock/defender:defender_32_04_113
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/run"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://prismacloud.elitelab.local:30084
        - name: DEFENDER_TYPE
          value: cri
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/run/docker.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "bc20c9a9-d462-b9a1-40aa-594f626d74b7"
        - name: DEFENDER_CLUSTER
          value: ""
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/run"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender