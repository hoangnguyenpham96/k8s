
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: alNWbVF4eFdMdll0RGloT2ZDRWM5d1ZxeXQyZTJmcjEzNlA1MDZ6akFyMHRmL1R5TTUrWVdDSFVkcmRyemhHOXpBTlQ3THUyRkxNRjdXOUhNWWh5d0E9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lSQUtuTGVjOWgwRzdzVDR2RklTSUdCdnd3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpNekUyTWpNME56QXdXaGNOTWpjd016RTJNak0wTnpBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFMekRSaStrWUNjN2pjT2dKTXBlckFmZjZCbWNZcjZpd052ZG1ESXRya2c2U2Qvb1VVMW9LcGlyNURCMwo0MXdsaGJVcHZZVzZ5RnZGbFVVOE1zWnhseURKODNsUktnT3ZaVGVWN3ZhdGJ6ZUtjb0JXZ1JNalp4eU1sT0hvCmoxV0R6TXVWOW5QMmRpcWQ5UndxMjFyc2RBS0FsTHorcXRlUzdrcVAycVJEdCtiWlhKa2NQU0hHeG5sU2tHU0cKMVJ5a1c5TnltbUZpMG85eHhucy9NdmVvdlRBUEtRcW5USExYTUYzTVNqYXVqTmZnN1ZvNUZPNTR5Z0w2b1ViYwp3Qk16NVFxOWw4U1pwK2VMS0NuMDFCN0VhdmJVVGxmVzVBZXFQeWJRTTZiazdRcG9abkZXSTg5NzQ5Q3JxNWFmCnh6MCtlcmhvdlN3VndnVGxhWXlzWEZLdjB1a0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLc01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGRyswamN6LzU4aGo5U0xFRVVpMHl1RllkeXlGTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3M4QjhyY3I0ZmcrOFQrV2hDbEZOOVZEaFA0dCtKamhCbTRxV2tCbTNxCm5hbTRueWpDT0VucmNFcTdxREJ6dmFkMEVLMFJLS1V4MXMrRC82bFpRckZCeXdWKzl4MTJNblZ4cjhMSk15R0QKZGZmOEp1dUhqS0dEMlNwVU1zajVOQzZmeXBFUzZZd1BhRlJKM3cyYlVqZWVSbmNBaklFM2RCcEowNzI1ZVp6YQp0VGFJQm5lZ0VhL2JYTTJTNW83TWVxSkZ6dGY4ZjFtbkxva1JGR0lUWTdxVWJIR1dXMWlsVzRUczdNSkxDa3RWCk1jVzNlWVlBMTRqRTMyby9TVFgyS3RvQ3NUMlJOQW9CYzNaOGpUdTlZcm5tamdnUFJhOGFQaUhDTGZVRjhjRkUKNEM3S2U1ck1iQll6ajlDY2h3OFMrbm5iUzFKcHV0Smt4Y2xUSE1IYm0rT2wKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRQlEvR0pGOG5ucXlJb3hnek5mZUg0akFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TkRBMApNRFV3TmpNNU1EQmFGdzB5TnpBME1EVXdOak01TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXgwRDNjTWtJOVVja3JjV3lNdUZBZ2VVQVZWSjZubkMwNStSYW5lYUhjSzRheHJSYnBiTnJZYktPQTRGTApRQWpmSlppN3JKaWJLRk5IcWpGeVF3Z1dlMjU4MzMxRDhHOCtEUldLK0FQK0lldjAvdkZXanNVNW1jSXprNlB3Cit3dE84clN4bGhCQzZCNlMvaHlhVnZPS2gxTW10MzIvQ3UyN015MWt1KzlUSHUxandBSll3ZXA4emdIS0lKeE8KNFg3UUNhZkFLVHdOb1BJcDRqelh2V2xzQUxVSFMrdzd3MlBpVy9kZHVMRUhCTmoyT3pjMGdseGlYY1Z3NmxNRgpaMmExVkV4UVlRQTFnUFZNY3RwUnNacGVrRXZsWEVlM3JRYlF1OWN1dnBlVmg0SXhzNlA4dEVkRXhTSmVwT05mCkxKUmNWeTdRdFhjbXNCNXpJSVdpb3BSTDJ3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJ2dEkzTQovK2ZJWS9VaXhCRkl0TXJoV0hjc2hUQUpCZ1VxQkFFQ0J3UUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFhCmE1YUZ3Q1h2OHEzamw2V1d5UXZJcUR1bU52TjdRUnY1RURpOEp2VWhqTlVCQS9QQ09TK1hsMEpTdWM5TW5LSzAKQkk3QzU3Q1hoQXdJYnNoQnpCZUk2Q2hucWh4YTBCVHBwZlF3S1BEanlzbDZQWlNXYkNwUTA4R3Q0V1pCY3o0QwprOXZwTUhWdVY5V3kwTXZHQ3dqem84eXprREpVWE53K0M2cnVRRlhxV0pnckNYWDZpK2MwWFI0ZC9DMjVMWVpqClVUTndETU9URUswa0RGS3NKS1Rwc2Y0aWxJWjRvcFlCa1Q5QVlCRXplQVBLbzlkMTJPL3plZTNnckJZcUdqTmgKZWJqb0NBcytXS1l4MU80K01IWk80YVEvMWRRcHNQOXRHNk5ZRTZRbE0xZ1E1L3VzMEJIOXp6dEFGTkdqS1hhSgptWlJzRjg4SllZRmM5aGNLaU9iTQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxiMzViN2M1MDA5YTdmNzFhMDk4NjFjZmJmMWY0ZjAxNAoKNlgrUjZ4QXBQMlo0aVlaUThzRHBQdWh4d2FOVWNmenZIazcxRGl3dWZVcmtWdnZLa1Q5MGtaT3NXUUloL3N3MAoyK2ErUWVYQXZLSXp5Z3R0UjFwVmlrSFlsSzVBaVhsUXQxbXFrS1VaeVk0MnhtMU9XSEdtNndPOEs0ZHZjQjUrCmJVdStYdkhQODNDNW1QcWkxcFNkUFdWYTVBY3N3eVBnMGF5WEpIZEtjV3hndDFVZWpLbGlHSHdMN0RYNWkyOW8KM3NBbWtEU0NWaTlpSmtpdXI2UnIvUmpJYjFxdjB5ZWNkN2NldXNZdzZVc1VDTzlDQTBmdHA1VnZZRkR0bGp2YgpUVEI4SXhycGhMaDRXeHkwNFZQQXUxMnpsTU9hdzRUUDlwM3hEL2w5Z05rdWhTMkJVSUlCN2RQN3FzVXRoOFlvClA3QlYvSjExTFB6UHFHYy9nR0FDSUdFaWgwZENmam1tdDJzbjBvZEIrQjZoNnZGbXdrcERPMnpWREY4R0RPcFEKSVA4OUlQenJtZTVPTWVpSHRrL1FONnlzOHBtdWgvN2VoSEx3cDEzUlZDeWs2a2tBWHk3ZUxwVlNDQWZhNjU2VQp0UE9RWXNYUnZTelV6allJb2ZoRUtDZnJpZnNLQ3RoWjkyK0lJdFBZM1JJZHZJcFg3Nm5GTW42SWI2dGRHMTdKClBhemRQVDFTRXJqMWNOaGdVWXRqNDRvYXRWZmhNMEIwU0IxbnMxVFo1b3RSYzZGNW1GT2M1M0w0YjdyUDAzckwKNG43RGtWZXhkWlMvT0dUck1KWWhTMmthMWxaZ2xMbHg1UlN4MDRabEhCenU3clMrMThwaXI4dWhFSnN1dk5FMwpBQ2IxVjVheGhUeEFCUmVDRVM4U241Qm5CVkNFbC95Y3VLNTJVM3VPQUxML0lxMGltL0dXS2ZLRjZCYUZibnh3CkdsaU5ocnU5N0p5Y240dG1EcUhWbmM2blJ1SGtmTXE4NS8yKzQ2ek9CSXRESGlJNzNscXZoSmhMcGRXaTQ4bnEKS3A3Z0NUMCtCWVFtVGVISHp2SktoYUR6dkNBd2lVakhDMTJPbGxOUzNralA0aGRoL2hoU0lUODc0NVFsalcxagoyKzZCQkhIcTJVTGlzQ0QyWHg5M2wzaUUwbDY5MXh0MGE4dHJaZXJ6Ulg4VGQ4NDAxbUFvVVBTTERhVktEVXgyCm5la3NXQytiN1VqQmZwYURYemd4MGo1b3VKS0o4RHhFaERLcStMVXdkVDhDVU9vWEZVaXVjQTAvZEdrTm5PYVEKMXF2SlQ1UitocEx2UUxMMW9NQXJZMTlXWHRCa3cwUVJhejArR2NNWFFURFYvRDdBUWlyY2hjRVVoeUh4Q0gyNQpCYmt2Tk10NWdOby9PT3hFUG1ZRWFNZFFneWdOcVVkNi9yYlZkZndrckFDd2N4aE1RcE9LM0JsMzIxMUNrNU5sCi9aa2NxQ0RFOVI3UnFObnFwbG0vdXhGRmhvK3Y0dnRRVGVRL05uV3I2d1UrT1RxWno4V0puODNJNllLdGxzS2gKb2JHd3pHajNla0JDcW9MbHBRSGcyL2tFVEhLeFRoTDNaa2pVSWJ2U05WUUJmc2FuTmFZY2w0akN5bG9UYmd1MQpDdGk0Skc1VkFvV29qbHF1cmYyZTJkTFE1WFRFU1d0VWx6WnVQR0txUkZHREk3ckMzNjVXUU81L2lVbkNqM0lOClZYOXZtVkVLU0Vnb0NqbXc3TlNoYWJnRmhJYU9MRnpDSXZIRHdYMCtGY0FiTEw4VHlPNXJvTHJOV1RGcHVzVU4KbjVMRTYwNUdUTlluV2ZvMzBoQlBJbVVBRHB4UWhSTWNoRnpFcEtKSG02VUFobFBncGIvN2pxdG5Ddjkwb0I4TAo5TE1EMGxYa2k0S2NxUEd2LzFMMjZaS09NSVhUOFptZnNhb1ZVT01aUEdqaDhWMFpaSWN2SXVwdStsZVRGMmt2CmNEUHY2dVl3VW1sNlJIYTE3TWNmZVVSOWthM0NiZmI5bjNrQzhhODVHWCtOcnNuaStLeUlYQTBvaTFON3pKaXAKdWVxUHNldGE2RnNCaUJybWhhS01iU2d2YzZrdGtIRnlpZE9GR1RNMUpSNXVaSmI0aUxFQXpjZmlGaGQrT0FjQgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQVBqSUVxd3VkaEF2bnZET0RJTURqKzB3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpRdwpOREU0TVRFek5UQXdXaGNOTWpjd05ERTRNVEV6TlRBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURRMTVCMHFaTXRBT2phcGZyMlpwZDUKRjY5SkZic0k1cTdDZHJxS2hrZllGQW8zcFpOZUF5ejMvdUpCRXN2SVFLUk9Ha1FHd2FxYkZ4akp3bUpPTDczeQpRTVhlb0dRNVNUVTVUYThWWDlOKzNiOGtHTTkvNjk1YjArNTYvUE5XbkhhOW84eXlJRm5yekgvSkJFQzZHazdBCjBpN3V1ODdNQkN6WWJFa2c3ZUhIODRqd1gwQnB4N0gwdCtjSHBTVTErWWZhTjUwZ0ZEU2Z0cTArTW9vQ0piNTkKSUh4bG03WWQ2bFhPcHc4d0xCZmN0VWxLQzdGbkhnS1hVa0FBdFROOWJLVUsvVkRvNDNiN1NuUVlhQWZXZFdtdwpCV2RPd2ljdlFiNEkrcmRzSFJYQlVsbWxucWJ6aS9lNmpNUVlCRG5wWlNyeUZWTE8xYUZOeUlINFdHdjc1NVhuCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkcrMGpjei81OGhqOVNMRQpFVWkweXVGWWR5eUZNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtxTEVydEZoR3gyTEpMQWtYVHBpOC9nOHp3NC9VZWJ5VDFFcTZUT3ZWRkQKbER3YXJVanhtamFUQW8xNFo2Y1ZLOVFLSS9LdTJVVFF5c0NuZEJDVDhlSjR3cE9POVNkOEVTYlZCeXE5VFpCeQpYOXhWWVdXNzEzUEtSNUk4eitjRDRDNGl2dmgwdmNteElWcmZBVy9IN05RNm1yZkpFWHRQVU5TbUV4MkVTSllMCjZFSEMwNThKc0Y5UzVnUUttRzlCU1cwRVpYMkJoTGY3TzZJbEE2TEQrRTJpQWRlSS9kQWY5UVdVbXdFYTFXbEcKSllNYlEvRVpJMVFWVTN5blZaek9QYXNRVmw3N0xHSkVZZ0VqSFB5cWF5YnlybnBhNEVJSUFYWVJYcEM0Q01LOQoxUkpQSWlvT2ZRbXoybHhjS2JUdlF0QWNheTA5Unk3UnhhYjV1RHNOcUpFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw0YWNmNWI0ODY2NzVmMTk1N2FkMWNmNGE3MGQ4OWRhMAoKS2hPR1MxNlJDOGlIYlBIRExpTFM0Y25iVTVBcXZHbUdkU1Zxd1hmbzI0T1JrY28rY0JKZnVNQ3JNYUZiWVJLcgpLMDVkRllSZzNZaHk0c1gzYmxXS29DdnF1NkZETUlLY3BDQ2hFbVBWc08rYzE2eUFLK3NNVlR0WDZybWRTZXJxCktNN1VvRGpPWTZIMGl6bTFZdGxmOE43YzJCY25MSFB0NWF2WlV1OTlvVFlwWER6a1c0eStZT29EOXJHRjFld1YKdnpkZUxSR2I4ZS81MnEreU5UZUZSSjN2MHM5SmZlR21tdncxQ1hlNEF0Z3FxWGZzUzBhL3JWc2UvTUdxZUd6VgpUakVnU3d6VGZaZDBmOXhMSCs3R21ITGZ1ZEVGS0wxSEtieEEwUVorUXBRbk56OWxnMjROYjdEc2tzOWdzaHowClM0OEVIcXE2MXhvOUV4SFcrYm53TEU2UUMxSVhOQXZUQUt6bXFxT1VLbVA0b0dNelljS1FpTGdzemU2emtVUmYKbFg1N3lLU1J3L3RBQTk1TUpQK1NXOVZYdVl0M3oweDVJWHZMWHRmeHZKTkgyV3FKMXFhVGl0WEljMkg0anhzQwpmS2w2SXBYTS9xSkdHaEtZK3FxT01OYktpdFA2U2JxRFNxWEpWWmViMHo3U05aZEhaSm52NHhOSWgwNDNqU1NTCjFLa2laOE5zem9ib3VPTXdKRkJTSkJvNmhVQjBHUElOY3EveVQrVXZuV1g1bHBsMEU3cUZPMUtSbHRtbGJDRHoKOFkyM2RGMHJpWmdlRHNsZUVHbUJjYXdURnZKNHcwMkdnTXhQZkZWbVo3Z2padDREOGJJSkpsRnBoTXpZZkp0SQpXb0x4VnVtNmRlSTR4eVptUUlubzg2d3M1eU4wTUoxcVBDdmNSL2tTaURySlFRSWJRUmc0QzZzdlFGNS9PcEd3CkFsNE9yRnMwRWNBQW1wL1BWa0ptWW1TNWcrWEhWTFFaQS9pdGYzWkJQQWYycXFyUzdBalFWNGhLOTNPS0lqRWIKbVhVQlZiVzQ1OFVOMkpjM2puNmg3bVo1N1RCcnc4V0ZTZ0w5SUVYRDVmOTh5SFNEL2ltS1hDejdtcmY0NGx4OQptQ2pJbDQ4dytmNVp6a3ZNdWVJWERUZW1rZXZNNlhzNjByQ2NFNTJCckF6ejljQUw3ckZBSDBIeVdJYWpjSGFUClQ1aHN5ZDVHWmlUNmJTREl0YVNwR1N1RGZMTzFZbkVhamV3ME1ORDFPWVhLdTRoQnB1QWlUdklZbzkwR3R2KzYKMWkvRGJvZWFkVzdVYTI5d0VQYmdpeGFXSUQ5a2RqWlBEQWVzankrWWkxL3NzWUpuTnJuanl0MXVVRUhNS3llQQpKNGNBN3YzaVVvM2pqVUFQKzNaNkNoay9JU2M2NkVzZm5RRDNUS2syTXdBUTloV251K0Fkdk5NUGdTSGhONFBOCi9QRkVPWllKSTN6WlpIRm1LakJCdzFLQlgwUmI4REVRZ013bzFQNFl1d2FYY2JYOElZeThaQWxGb2RYRWpRMCsKdmk2YzkxeG05dm5YVThNV3pNdSt1QzRXYVVZbG1jVkU3VGZUaUNCMitXTGhzUjZnYzd1eWptaVlaMWNwQTBDNwp4NHFTWUpSNk1tUWJTSXhPenNldUg2OWN5Z0t4azFrQ0ovcG9aL1h3dnQzcDBOTk5lTlF2czY1aFo1a2k4emJ1CmhNVEt1V1NDMEdGS0p3Tm82ZU94bmI4TitiVUJKQWsvM1RpYURKQlc1Ymh3anpGZWgwTHNNK0xEOEI1N1ppaDAKcndNL3FPZTE4bFpKckdDQlNNVE9BZlVsSjFNV3E2VEF2UFRJYWpQWmxaVXc4UzZYNUFNSmFuaUhkbGZTeGg0WgpYMFl2QXZ5bGF1bEFFN283NGREZzlBVGdGckhWVlFYckhVTktjWDg3eitqYVpmN1FZR25DejFIcll6RjRJMkpmCi84OVRjcjdxRVFkbFEyMkdBZW45d01IbXBTYUxxYWJQNnBML1ppOCtQM1JMd3BjQ3VFVmVDdVFrQ215MG1hZnkKV2d2aVRWT25PMlBvcVlicVhZY1luVUQ3dFhNN3JWM1Q5RlNxa1MyS3JOVzNRWFh5WFk0cEkxNklJSVNHWUhMTAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_bjclvgj4box9oxhmfkwh1tkbp27o0uur/twistlock/defender:defender_32_04_113
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/run"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://prismacloud.elitelab.local:30084
        - name: DEFENDER_TYPE
          value: cri
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/run/docker.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "6cabfb27-2eca-4362-e9b5-280316511ae2"
        - name: DEFENDER_CLUSTER
          value: ""
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/run"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender